definitions:
  handler.IngredientsInput:
    properties:
      ingredients:
        type: string
    required:
    - ingredients
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handler.signUpInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.FullRecipe:
    properties:
      ingredients:
        items:
          $ref: '#/definitions/models.Ingredient'
        type: array
      recipe:
        $ref: '#/definitions/models.Recipe'
    type: object
  models.Ingredient:
    properties:
      id:
        type: integer
      name:
        type: string
      quantity:
        type: number
      unit_id:
        type: integer
    required:
    - name
    - quantity
    - unit_id
    type: object
  models.InputFullRecipe:
    properties:
      ingredients:
        items:
          $ref: '#/definitions/models.InputIngredient'
        type: array
      recipe:
        $ref: '#/definitions/models.InputRecipe'
    type: object
  models.InputIngredient:
    properties:
      name:
        type: string
      quantity:
        type: number
      unit_id:
        type: integer
    required:
    - name
    - quantity
    - unit_id
    type: object
  models.InputRecipe:
    properties:
      instructions:
        type: string
      name:
        type: string
    required:
    - instructions
    - name
    type: object
  models.Recipe:
    properties:
      id:
        type: integer
      instructions:
        type: string
      name:
        type: string
      user_id:
        type: integer
    required:
    - instructions
    - name
    type: object
  models.SavedRecipes:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.SimplifiedRecipe:
    properties:
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8081
info:
  contact: {}
  title: Recipes App API
  version: "1.0"
paths:
  /api/recipes:
    get:
      consumes:
      - application/json
      description: getting all recipes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SimplifiedRecipe'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: getAllRecipes
      tags:
      - api/recipes
  /api/recipes/{id}:
    delete:
      consumes:
      - application/json
      description: deleting recipe(only creator can delete recipe he created)
      parameters:
      - description: ID рецепта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: deleteRecipe
      tags:
      - api/recipes
    get:
      consumes:
      - application/json
      description: getting recipe by id
      parameters:
      - description: ID рецепта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FullRecipe'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: getRecipeById
      tags:
      - api/recipes
    post:
      consumes:
      - application/json
      description: saving recipe to profile
      parameters:
      - description: ID рецепта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: saveRecipeToProfile
      tags:
      - api/recipes
    put:
      consumes:
      - application/json
      description: updating recipe(only creator can update recipe he created)
      parameters:
      - description: ID рецепта
        in: path
        name: id
        required: true
        type: integer
      - description: New data for recipe
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.InputFullRecipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: updateRecipe
      tags:
      - api/recipes
  /api/recipes/by-ingredients:
    post:
      consumes:
      - application/json
      description: getting recipe by ingredients
      parameters:
      - description: Список ингредиентов
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.IngredientsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SimplifiedRecipe'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: getRecipeByIngredients
      tags:
      - api/recipes
  /api/recipes/create:
    post:
      consumes:
      - application/json
      description: creating recipe
      parameters:
      - description: json рецепта
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.InputFullRecipe'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: createRecipe
      tags:
      - api/recipes
  /api/recipes/saved:
    delete:
      consumes:
      - application/json
      description: deleting saved recipes by ids
      parameters:
      - description: ID рецептов
        in: body
        name: input
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: deleteRecipesByIngredients
      tags:
      - api/recipes
    get:
      consumes:
      - application/json
      description: getting saved recipes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SavedRecipes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - BearerAuth: []
      summary: getSavedRecipes
      tags:
      - api/recipes
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Authorization
      parameters:
      - description: username and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create account
      parameters:
      - description: username and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
